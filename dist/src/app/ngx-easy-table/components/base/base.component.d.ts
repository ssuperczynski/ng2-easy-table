import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { ResourceService } from '../../services/resource-service';
import { LoggerService } from '../../services/logger.service';
import { Config } from '../../model/config';
import 'rxjs/add/observable/from';
import 'rxjs/add/operator/mergeMap';
import 'rxjs/add/operator/reduce';
import 'rxjs/add/operator/groupBy';
export declare class BaseComponent implements OnInit, OnChanges, AfterViewInit {
    resource: ResourceService;
    private cdr;
    private logger;
    selectedRow: number;
    selectedCol: number;
    term: any;
    config: Config;
    globalSearchTerm: any;
    grouped: any[];
    menuActive: boolean;
    page: number;
    count: any;
    limit: any;
    selectedDetailsTemplateRowId: any;
    id: any;
    configuration: Config;
    data: Array<Object>;
    pagination: any;
    groupRowsBy: any;
    detailsTemplate: any;
    columns: Array<string>;
    event: EventEmitter<{}>;
    rowTemplate: TemplateRef<any>;
    constructor(resource: ResourceService, cdr: ChangeDetectorRef, logger: LoggerService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    orderBy(key: string): void;
    clickedCell($event: object, row: object, key: string | number | boolean, colIndex: number, rowIndex: number): void;
    toggleColumn(colIndex: any): void;
    onSearch($event: any): void;
    onGlobalSearch($event: any): void;
    onPagination($event: any): void;
    onOrder(key: any): void;
    private emitEvent(event, value);
    selectRowId(rowIndex: any): void;
}
